@define-mixin breakpoint {
  &cols {
    &_1 {
      --grid-cols: 1;
    }

    &_2 {
      --grid-cols: 2;
    }

    &_3 {
      --grid-cols: 3;
    }

    &_4 {
      --grid-cols: 4;
    }

    &_5 {
      --grid-cols: 5;
    }

    &_6 {
      --grid-cols: 6;
    }

    &_7 {
      --grid-cols: 7;
    }

    &_8 {
      --grid-cols: 8;
    }

    &_9 {
      --grid-cols: 9;
    }

    &_10 {
      --grid-cols: 10;
    }

    &_11 {
      --grid-cols: 11;
    }

    &_12 {
      --grid-cols: 12;
    }
  }

  &xAlign {
    &_left {
      --grid-justify-items: start;
    }

    &_center {
      --grid-justify-items: center;
    }

    &_right {
      --grid-justify-items: end;
    }
  }

  &yAlign {
    &_top {
      --grid-align-items: start;
    }

    &_center {
      --grid-align-items: center;
    }

    &_bottom {
      --grid-align-items: end;
    }
  }

  &gap {
    &_0 {
      --grid-gap: 0;
    }

    &_2xs {
      --grid-gap: var(--space-2xs);
    }

    &_xs {
      --grid-gap: var(--space-xs);
    }

    &_s {
      --grid-gap: var(--space-s);
    }

    &_m {
      --grid-gap: var(--space-m);
    }

    &_l {
      --grid-gap: var(--space-l);
    }

    &_xl {
      --grid-gap: var(--space-xl);
    }

    &_2xl {
      --grid-gap: var(--space-2xl);
    }

    &_3xl {
      --grid-gap: var(--space-3xl);
    }

    &_4xl {
      --grid-gap: var(--space-4xl);
    }

    &_5xl {
      --grid-gap: var(--space-5xl);
    }

    &_6xl {
      --grid-gap: var(--space-6xl);
    }
  }

  &colGap {
    &_0 {
      --grid-column-gap: 0;
    }

    &_2xs {
      --grid-column-gap: var(--space-2xs);
    }

    &_xs {
      --grid-column-gap: var(--space-xs);
    }

    &_s {
      --grid-column-gap: var(--space-s);
    }

    &_m {
      --grid-column-gap: var(--space-m);
    }

    &_l {
      --grid-column-gap: var(--space-l);
    }

    &_xl {
      --grid-column-gap: var(--space-xl);
    }

    &_2xl {
      --grid-column-gap: var(--space-2xl);
    }

    &_3xl {
      --grid-column-gap: var(--space-3xl);
    }

    &_4xl {
      --grid-column-gap: var(--space-4xl);
    }

    &_5xl {
      --grid-column-gap: var(--space-5xl);
    }

    &_6xl {
      --grid-column-gap: var(--space-6xl);
    }
  }

  &rowGap {
    &_0 {
      --grid-row-gap: 0;
    }

    &_2xs {
      --grid-row-gap: var(--space-2xs);
    }

    &_xs {
      --grid-row-gap: var(--space-xs);
    }

    &_s {
      --grid-row-gap: var(--space-s);
    }

    &_m {
      --grid-row-gap: var(--space-m);
    }

    &_l {
      --grid-row-gap: var(--space-l);
    }

    &_xl {
      --grid-row-gap: var(--space-xl);
    }

    &_2xl {
      --grid-row-gap: var(--space-2xl);
    }

    &_3xl {
      --grid-row-gap: var(--space-3xl);
    }

    &_4xl {
      --grid-row-gap: var(--space-4xl);
    }

    &_5xl {
      --grid-row-gap: var(--space-5xl);
    }

    &_6xl {
      --grid-row-gap: var(--space-6xl);
    }
  }
}

.Grid {
  display: grid;
  width: 100%;

  &[class*='cols_'] {
    grid-template-columns: repeat(var(--grid-cols, 1), minmax(0, 1fr));
  }

  &[class*='xAlign_'] {
    justify-items: var(--grid-justify-items);
  }

  &[class*='yAlign_'] {
    align-items: var(--grid-align-items);
  }

  &[class*='rowGap_'] {
    row-gap: var(--grid-row-gap);
  }

  &[class*='colGap_'] {
    column-gap: var(--grid-column-gap);
  }

  &[class*='gap'] {
    gap: var(--grid-gap);
  }

  &_ {
    @mixin breakpoint;
  }

  @media screen and (min-width: 360px) {
    &_xs\: {
      @mixin breakpoint;
    }
  }

  @media screen and (min-width: 640px) {
    &_s\: {
      @mixin breakpoint;
    }
  }

  @media screen and (min-width: 1024px) {
    &_m\: {
      @mixin breakpoint;
    }
  }

  @media screen and (min-width: 1280px) {
    &_l\: {
      @mixin breakpoint;
    }
  }

  @media screen and (min-width: 1440px) {
    &_xl\: {
      @mixin breakpoint;
    }
  }

  @media screen and (min-width: 1920px) {
    &_2xl\: {
      @mixin breakpoint;
    }
  }
}
